# Name of the GitHub Actions workflow
name: Build and Release

# Trigger the workflow when a new tag is created
on:
  push:
    tags:
      - '*.*.*'

# permissions block to grant the workflow write access to create a release
permissions:
  contents: write

jobs:
  build-and-release:
    # Use a Windows runner for creating the Windows executable
    runs-on: windows-latest

    steps:
      # Step 1: Check out the repository's code
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Step 2: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[build,dev]

      # Step 4: Run tests with pytest
      - name: Run tests
        run: pytest

      # Step 5: Build the executable using PyInstaller
      - name: Build executable
        run: |
          pyinstaller --onefile --windowed --name ShiftScheduler --icon=assets/icon.ico src/shift_scheduler/main.py

      # Step 6: Get the version number from the tag
      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${{ github.ref_name }}" >> $env:GITHUB_OUTPUT

      # Step 7: Create the ZIP file for the release
      - name: Package executable for release
        run: |
          Compress-Archive -Path dist/ShiftScheduler.exe -DestinationPath ShiftScheduler-${{ steps.get_version.outputs.VERSION }}-windows.zip
          
      # Step 8: Create a GitHub Release and upload the executable ZIP
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: ShiftScheduler-${{ steps.get_version.outputs.VERSION }}-windows.zip
          name: "Shift Scheduler Release ${{ steps.get_version.outputs.VERSION }}"
          body_path: CHANGELOG.md